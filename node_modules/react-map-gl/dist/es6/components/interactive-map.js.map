{"version":3,"sources":["../../../src/components/interactive-map.js"],"names":["React","useContext","useRef","useMemo","useEffect","useImperativeHandle","forwardRef","PropTypes","StaticMap","getViewport","MAPBOX_LIMITS","TransitionManager","MapContext","MapContextProvider","EventManager","MapController","useIsomorphicLayoutEffect","getTerrainElevation","propTypes","Object","assign","maxZoom","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","onInteractionStateChange","transitionDuration","oneOfType","string","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onDblClick","onContextMenu","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onMouseEnter","onMouseLeave","onMouseOut","onWheel","touchAction","eventRecognizerOptions","clickRadius","interactiveLayerIds","array","getCursor","controller","instanceOf","getDefaultCursor","isDragging","isHovering","defaultProps","onNativeClick","event","preventDefault","normalizeEvent","lngLat","offsetCenter","x","y","Number","isFinite","pos","point","map","location","unproject","lng","lat","getFeatures","queryParams","size","props","layers","queryRenderedFeatures","onEvent","callbackName","call","onPointerDown","pointerType","onPointerUp","onPointerMove","state","features","Boolean","length","isEntering","isExiting","setState","onPointerClick","callbacks","isDoubleClickEnabled","type","push","filter","forEach","cb","getRefHandles","staticMapRef","getMap","current","InteractiveMap","ref","parentContext","eventManager","recognizerOptions","eventCanvasRef","_thisRef","width","height","thisRef","newState","style","cursor","inRender","viewportUpdateRequested","stateUpdateRequested","handleViewportChange","viewState","interactionState","oldViewState","defineProperty","get","context","container","viewport","handleInteractionStateChange","updateControllerOpts","setOptions","isInteractive","onStateChange","onResize","setElement","on","pointerdown","bind","pointermove","pointerup","pointerleave","click","anyclick","dblclick","wheel","contextmenu","destroy","eventCanvasStyle","position","_child","supported"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useContext, useRef, useMemo, useEffect, useImperativeHandle, forwardRef} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport StaticMap, {getViewport} from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\n\nimport TransitionManager from '../utils/transition-manager';\nimport MapContext, {MapContextProvider} from './map-context';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapController from '../utils/map-controller';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport {getTerrainElevation} from '../utils/terrain';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Drag to pan\n  dragPan: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Drag to rotate\n  dragRotate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Multitouch rotate\n  touchRotate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Keyboard\n  keyboard: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n\n  /** Event callbacks */\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onWheel: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Custom hammer.js recognizer options */\n  eventRecognizerOptions: PropTypes.object,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** List of layers that are interactive */\n  interactiveLayerIds: PropTypes.array,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controller\n  // The object must expose a method: `setOptions(opts)`\n  controller: PropTypes.instanceOf(MapController)\n});\n\nconst getDefaultCursor = ({isDragging, isHovering}) =>\n  isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n\nconst defaultProps = Object.assign(\n  {},\n  StaticMap.defaultProps,\n  MAPBOX_LIMITS,\n  TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onNativeClick: null,\n    onHover: null,\n    onContextMenu: event => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n    touchZoom: true,\n    touchRotate: false,\n    keyboard: true,\n\n    touchAction: 'none',\n    eventRecognizerOptions: {},\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\n/* Event handlers */\nfunction normalizeEvent(event) {\n  if (event.lngLat || !event.offsetCenter) {\n    return event;\n  }\n\n  const {\n    offsetCenter: {x, y}\n  } = event;\n  // https://github.com/visgl/react-map-gl/issues/1449\n  // TODO - fix in mjolnir.js\n  if (!Number.isFinite(x) || !Number.isFinite(y)) {\n    return event;\n  }\n  const pos = [x, y];\n\n  event.point = pos;\n\n  if (this.map) {\n    const location = this.map.unproject(pos);\n    event.lngLat = [location.lng, location.lat];\n  }\n\n  return event;\n}\n\nfunction getFeatures(pos) {\n  const {map} = this;\n\n  if (!map || !pos) {\n    return null;\n  }\n\n  const queryParams = {};\n  const size = this.props.clickRadius;\n\n  if (this.props.interactiveLayerIds) {\n    queryParams.layers = this.props.interactiveLayerIds;\n  }\n\n  try {\n    // This may fail if map is still loading\n    return map.queryRenderedFeatures(\n      size\n        ? // Radius enables point features, like marker symbols, to be clicked.\n          [\n            [pos[0] - size, pos[1] + size],\n            [pos[0] + size, pos[1] - size]\n          ]\n        : pos,\n      queryParams\n    );\n  } catch {\n    return null;\n  }\n}\n\nfunction onEvent(callbackName, event) {\n  const func = this.props[callbackName];\n  if (func) {\n    func(normalizeEvent.call(this, event));\n  }\n}\n\nfunction onPointerDown(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchStart' : 'onMouseDown', event);\n}\n\nfunction onPointerUp(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchEnd' : 'onMouseUp', event);\n}\n\n// eslint-disable-next-line complexity\nfunction onPointerMove(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchMove' : 'onMouseMove', event);\n\n  if (!this.state.isDragging) {\n    const {onHover, interactiveLayerIds} = this.props;\n    let features;\n    event = normalizeEvent.call(this, event);\n    if (interactiveLayerIds || onHover) {\n      features = getFeatures.call(this, event.point);\n    }\n\n    const isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\n    const isEntering = isHovering && !this.state.isHovering;\n    const isExiting = !isHovering && this.state.isHovering;\n\n    if (onHover || isEntering) {\n      event.features = features;\n\n      // backward compatibility: v3 `onHover` interface\n      if (onHover) {\n        onHover(event);\n      }\n    }\n\n    if (isEntering) {\n      onEvent.call(this, 'onMouseEnter', event);\n    }\n    if (isExiting) {\n      onEvent.call(this, 'onMouseLeave', event);\n    }\n    if (isEntering || isExiting) {\n      this.setState({isHovering});\n    }\n  }\n}\n\nfunction onPointerClick(event) {\n  const {onClick, onNativeClick, onDblClick, doubleClickZoom} = this.props;\n  let callbacks = [];\n  const isDoubleClickEnabled = onDblClick || doubleClickZoom;\n\n  // `click` is only fired on single click. `anyclick` is fired twice if double clicking.\n  // `click` has a delay period after pointer up that prevents it from firing when\n  // double clicking. `anyclick` is always fired immediately after pointer up.\n  // If double click is turned off by the user, we want to immediately fire the\n  // onClick event. Otherwise, we wait to make sure it's a single click.\n  switch (event.type) {\n    case 'anyclick':\n      callbacks.push(onNativeClick);\n      if (!isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n      break;\n\n    case 'click':\n      if (isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n      break;\n\n    default:\n  }\n\n  callbacks = callbacks.filter(Boolean);\n\n  if (callbacks.length) {\n    event = normalizeEvent.call(this, event);\n    // backward compatibility: v3 `onClick` interface\n    event.features = getFeatures.call(this, event.point);\n    callbacks.forEach(cb => cb(event));\n  }\n}\n/* End of event handers */\n\nfunction getRefHandles(staticMapRef) {\n  return {\n    getMap: staticMapRef.current && staticMapRef.current.getMap,\n    queryRenderedFeatures: staticMapRef.current && staticMapRef.current.queryRenderedFeatures\n  };\n}\n\n/* eslint-disable max-statements */\nconst InteractiveMap = forwardRef((props, ref) => {\n  const parentContext = useContext(MapContext);\n  const controller = useMemo(() => props.controller || new MapController(), []);\n  const eventManager = useMemo(\n    () =>\n      new EventManager(null, {\n        touchAction: props.touchAction,\n        recognizerOptions: props.eventRecognizerOptions\n      }),\n    []\n  );\n  const eventCanvasRef = useRef(null);\n  const staticMapRef = useRef(null);\n\n  // Event handlers are registered once but need access to the latest props\n  // This is an anti-pattern, though it maintains a persistent reference to the latest props/state of this component\n  const _thisRef = useRef({\n    width: 0,\n    height: 0,\n    state: {\n      isHovering: false,\n      isDragging: false\n    }\n  });\n  const thisRef = _thisRef.current;\n  thisRef.props = props;\n  thisRef.map = staticMapRef.current && staticMapRef.current.getMap();\n  thisRef.setState = newState => {\n    thisRef.state = {...thisRef.state, ...newState};\n    eventCanvasRef.current.style.cursor = props.getCursor(thisRef.state);\n  };\n\n  let inRender = true;\n  let viewportUpdateRequested;\n  let stateUpdateRequested;\n\n  const handleViewportChange = (viewState, interactionState, oldViewState) => {\n    if (inRender) {\n      // Do not call the callbacks during render - may result in \"cannot update during an existing state transition\" error.\n      // Defer the update until after render\n      viewportUpdateRequested = [viewState, interactionState, oldViewState];\n      return;\n    }\n    const {onViewStateChange, onViewportChange} = thisRef.props;\n\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(viewState, 'position', {\n      get: () => [0, 0, getTerrainElevation(thisRef.map, viewState)]\n    });\n\n    if (onViewStateChange) {\n      onViewStateChange({viewState, interactionState, oldViewState});\n    }\n    if (onViewportChange) {\n      onViewportChange(viewState, interactionState, oldViewState);\n    }\n  };\n\n  useImperativeHandle(ref, () => getRefHandles(staticMapRef), []);\n\n  const context = useMemo(\n    () => ({\n      ...parentContext,\n      eventManager,\n      container: parentContext.container || eventCanvasRef.current\n    }),\n    [parentContext, eventCanvasRef.current]\n  );\n  context.onViewportChange = handleViewportChange;\n  context.viewport = parentContext.viewport || getViewport(thisRef);\n  thisRef.viewport = context.viewport;\n\n  const handleInteractionStateChange = interactionState => {\n    const {isDragging = false} = interactionState;\n    if (isDragging !== thisRef.state.isDragging) {\n      thisRef.setState({isDragging});\n    }\n\n    if (inRender) {\n      // Do not call the callbacks during render - may result in \"cannot update during an existing state transition\" error.\n      // Defer the update until after render\n      stateUpdateRequested = interactionState;\n      return;\n    }\n\n    const {onInteractionStateChange} = thisRef.props;\n    if (onInteractionStateChange) {\n      onInteractionStateChange(interactionState);\n    }\n  };\n\n  const updateControllerOpts = () => {\n    if (thisRef.width && thisRef.height) {\n      controller.setOptions({\n        ...thisRef.props,\n        ...thisRef.props.viewState,\n        isInteractive: Boolean(thisRef.props.onViewStateChange || thisRef.props.onViewportChange),\n        onViewportChange: handleViewportChange,\n        onStateChange: handleInteractionStateChange,\n        eventManager,\n        width: thisRef.width,\n        height: thisRef.height\n      });\n    }\n  };\n\n  const onResize = ({width, height}) => {\n    thisRef.width = width;\n    thisRef.height = height;\n    updateControllerOpts();\n    thisRef.props.onResize({width, height});\n  };\n\n  useEffect(() => {\n    eventManager.setElement(eventCanvasRef.current);\n    // Register event handlers\n    eventManager.on({\n      pointerdown: onPointerDown.bind(thisRef),\n      pointermove: onPointerMove.bind(thisRef),\n      pointerup: onPointerUp.bind(thisRef),\n      pointerleave: onEvent.bind(thisRef, 'onMouseOut'),\n      click: onPointerClick.bind(thisRef),\n      anyclick: onPointerClick.bind(thisRef),\n      dblclick: onEvent.bind(thisRef, 'onDblClick'),\n      wheel: onEvent.bind(thisRef, 'onWheel'),\n      contextmenu: onEvent.bind(thisRef, 'onContextMenu')\n    });\n\n    // Clean up on unmount\n    return () => {\n      eventManager.destroy();\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (viewportUpdateRequested) {\n      // Perform deferred updates\n      handleViewportChange(...viewportUpdateRequested);\n    }\n    if (stateUpdateRequested) {\n      handleInteractionStateChange(stateUpdateRequested);\n    }\n  });\n\n  updateControllerOpts();\n\n  const {width, height, style, getCursor} = props;\n\n  const eventCanvasStyle = useMemo(\n    () => ({\n      position: 'relative',\n      ...style,\n      width,\n      height,\n      cursor: getCursor(thisRef.state)\n    }),\n    [style, width, height, getCursor, thisRef.state]\n  );\n\n  if (!viewportUpdateRequested || !thisRef._child) {\n    // Only rerender if no viewport update has been requested during render.\n    // Otherwise return the last rendered child, and invoke the callback when we're done.\n    thisRef._child = (\n      <MapContextProvider value={context}>\n        <div key=\"event-canvas\" ref={eventCanvasRef} style={eventCanvasStyle}>\n          <StaticMap\n            {...props}\n            width=\"100%\"\n            height=\"100%\"\n            style={null}\n            onResize={onResize}\n            ref={staticMapRef}\n          />\n        </div>\n      </MapContextProvider>\n    );\n  }\n\n  inRender = false;\n  return thisRef._child;\n});\n\nInteractiveMap.supported = StaticMap.supported;\nInteractiveMap.propTypes = propTypes;\nInteractiveMap.defaultProps = defaultProps;\n\nexport default InteractiveMap;\n"],"file":"interactive-map.js"}