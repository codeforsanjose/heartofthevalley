{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\nexport function normalizeStyle(style) {\n  if (!style) {\n    return null;\n  }\n\n  if (typeof style === 'string') {\n    return style;\n  }\n\n  if (style.toJS) {\n    style = style.toJS();\n  }\n\n  var layerIndex = {};\n\n  var _iterator = _createForOfIteratorHelper(style.layers),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var layer = _step.value;\n      layerIndex[layer.id] = layer;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var layers = style.layers.map(function (layer) {\n    var layerRef = layerIndex[layer.ref];\n    var normalizedLayer = null;\n\n    if ('interactive' in layer) {\n      normalizedLayer = _objectSpread({}, layer);\n      delete normalizedLayer.interactive;\n    }\n\n    if (layerRef) {\n      normalizedLayer = normalizedLayer || _objectSpread({}, layer);\n      delete normalizedLayer.ref;\n\n      var _iterator2 = _createForOfIteratorHelper(refProps),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var propName = _step2.value;\n\n          if (propName in layerRef) {\n            normalizedLayer[propName] = layerRef[propName];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return normalizedLayer || layer;\n  });\n  return _objectSpread(_objectSpread({}, style), {}, {\n    layers: layers\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,cAAnB,EAAmC,SAAnC,EAA8C,SAA9C,EAAyD,QAAzD,EAAmE,QAAnE,CAAjB;AAKA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EACpC,IAAI,CAACA,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EACD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC7B,OAAOA,KAAP;EACD;;EACD,IAAIA,KAAK,CAACC,IAAV,EAAgB;IACdD,KAAK,GAAGA,KAAK,CAACC,IAAND,EAARA;EACD;;EACD,IAAME,UAAU,GAAG,EAAnB;;EAVoC,2CAYhBF,KAAK,CAACG,MAZU;EAAA;;EAAA;IAYpC,oDAAkC;MAAA,IAAvBC,KAAuB;MAChCF,UAAU,CAACE,KAAK,CAACC,EAAP,CAAVH,GAAuBE,KAAvBF;IACD;EAdmC;IAAAI;EAAA;IAAAA;EAAA;;EAgBpC,IAAMH,MAAM,GAAGH,KAAK,CAACG,MAANH,CAAaO,GAAbP,CAAiB,iBAAS;IACvC,IAAMQ,QAAQ,GAAGN,UAAU,CAACE,KAAK,CAACK,GAAP,CAA3B;IACA,IAAIC,eAAe,GAAG,IAAtB;;IAEA,IAAI,iBAAiBN,KAArB,EAA4B;MAC1BM,eAAe,qBAAON,KAAP,CAAfM;MAEA,OAAOA,eAAe,CAACC,WAAvB;IACD;;IAGD,IAAIH,QAAJ,EAAc;MACZE,eAAe,GAAGA,eAAe,sBAAQN,KAAR,CAAjCM;MACA,OAAOA,eAAe,CAACD,GAAvB;;MAFY,4CAIWX,QAJX;MAAA;;MAAA;QAIZ,uDAAiC;UAAA,IAAtBc,QAAsB;;UAC/B,IAAIA,QAAQ,IAAIJ,QAAhB,EAA0B;YACxBE,eAAe,CAACE,QAAD,CAAfF,GAA4BF,QAAQ,CAACI,QAAD,CAApCF;UACD;QACF;MARW;QAAAG;MAAA;QAAAA;MAAA;IASb;;IAED,OAAOH,eAAe,IAAIN,KAA1B;EAtBa,EAAf;EA0BA,uCAAWJ,KAAX;IAAkBG,MAAM,EAANA;EAAlB;AACD","names":["refProps","normalizeStyle","style","toJS","layerIndex","layers","layer","id","_iterator","map","layerRef","ref","normalizedLayer","interactive","propName","_iterator2"],"sources":["../../../src/utils/style-utils.js"],"sourcesContent":["const refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\n// Prepare a map style object for diffing\n// If immutable - convert to plain object\n// Work around some issues in the styles that would fail Mapbox's diffing\nexport function normalizeStyle(style) {\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'string') {\n    return style;\n  }\n  if (style.toJS) {\n    style = style.toJS();\n  }\n  const layerIndex = {};\n\n  for (const layer of style.layers) {\n    layerIndex[layer.id] = layer;\n  }\n\n  const layers = style.layers.map(layer => {\n    const layerRef = layerIndex[layer.ref];\n    let normalizedLayer = null;\n\n    if ('interactive' in layer) {\n      normalizedLayer = {...layer};\n      // Breaks style diffing :(\n      delete normalizedLayer.interactive;\n    }\n\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\n    if (layerRef) {\n      normalizedLayer = normalizedLayer || {...layer};\n      delete normalizedLayer.ref;\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\n      for (const propName of refProps) {\n        if (propName in layerRef) {\n          normalizedLayer[propName] = layerRef[propName];\n        }\n      }\n    }\n\n    return normalizedLayer || layer;\n  });\n\n  // Do not mutate the style object provided by the user\n  return {...style, layers};\n}\n"]},"metadata":{},"sourceType":"module"}