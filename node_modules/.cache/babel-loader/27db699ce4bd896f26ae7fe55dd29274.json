{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { useContext, useRef, useMemo, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport * as PropTypes from 'prop-types';\nimport StaticMap, { getViewport } from './static-map';\nimport { MAPBOX_LIMITS } from '../utils/map-state';\nimport TransitionManager from '../utils/transition-manager';\nimport MapContext, { MapContextProvider } from './map-context';\nimport { EventManager } from 'mjolnir.js';\nimport MapController from '../utils/map-controller';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport { getTerrainElevation } from '../utils/terrain';\nvar propTypes = Object.assign({}, StaticMap.propTypes, {\n  maxZoom: PropTypes.number,\n  minZoom: PropTypes.number,\n  maxPitch: PropTypes.number,\n  minPitch: PropTypes.number,\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  transitionInterpolator: PropTypes.object,\n  transitionInterruption: PropTypes.number,\n  transitionEasing: PropTypes.func,\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n  scrollZoom: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  dragPan: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  dragRotate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  doubleClickZoom: PropTypes.bool,\n  touchZoom: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  touchRotate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  keyboard: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onWheel: PropTypes.func,\n  touchAction: PropTypes.string,\n  eventRecognizerOptions: PropTypes.object,\n  clickRadius: PropTypes.number,\n  interactiveLayerIds: PropTypes.array,\n  getCursor: PropTypes.func,\n  controller: PropTypes.instanceOf(MapController)\n});\n\nvar getDefaultCursor = function getDefaultCursor(_ref) {\n  var isDragging = _ref.isDragging,\n      isHovering = _ref.isHovering;\n  return isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n};\n\nvar defaultProps = Object.assign({}, StaticMap.defaultProps, MAPBOX_LIMITS, TransitionManager.defaultProps, {\n  onViewStateChange: null,\n  onViewportChange: null,\n  onClick: null,\n  onNativeClick: null,\n  onHover: null,\n  onContextMenu: function onContextMenu(event) {\n    return event.preventDefault();\n  },\n  scrollZoom: true,\n  dragPan: true,\n  dragRotate: true,\n  doubleClickZoom: true,\n  touchZoom: true,\n  touchRotate: false,\n  keyboard: true,\n  touchAction: 'none',\n  eventRecognizerOptions: {},\n  clickRadius: 0,\n  getCursor: getDefaultCursor\n});\n\nfunction normalizeEvent(event) {\n  if (event.lngLat || !event.offsetCenter) {\n    return event;\n  }\n\n  var _event$offsetCenter = event.offsetCenter,\n      x = _event$offsetCenter.x,\n      y = _event$offsetCenter.y;\n\n  if (!Number.isFinite(x) || !Number.isFinite(y)) {\n    return event;\n  }\n\n  var pos = [x, y];\n  event.point = pos;\n\n  if (this.map) {\n    var location = this.map.unproject(pos);\n    event.lngLat = [location.lng, location.lat];\n  }\n\n  return event;\n}\n\nfunction getFeatures(pos) {\n  var map = this.map;\n\n  if (!map || !pos) {\n    return null;\n  }\n\n  var queryParams = {};\n  var size = this.props.clickRadius;\n\n  if (this.props.interactiveLayerIds) {\n    queryParams.layers = this.props.interactiveLayerIds;\n  }\n\n  try {\n    return map.queryRenderedFeatures(size ? [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]] : pos, queryParams);\n  } catch (_unused) {\n    return null;\n  }\n}\n\nfunction onEvent(callbackName, event) {\n  var func = this.props[callbackName];\n\n  if (func) {\n    func(normalizeEvent.call(this, event));\n  }\n}\n\nfunction onPointerDown(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchStart' : 'onMouseDown', event);\n}\n\nfunction onPointerUp(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchEnd' : 'onMouseUp', event);\n}\n\nfunction onPointerMove(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchMove' : 'onMouseMove', event);\n\n  if (!this.state.isDragging) {\n    var _this$props = this.props,\n        onHover = _this$props.onHover,\n        interactiveLayerIds = _this$props.interactiveLayerIds;\n    var features;\n    event = normalizeEvent.call(this, event);\n\n    if (interactiveLayerIds || onHover) {\n      features = getFeatures.call(this, event.point);\n    }\n\n    var isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\n    var isEntering = isHovering && !this.state.isHovering;\n    var isExiting = !isHovering && this.state.isHovering;\n\n    if (onHover || isEntering) {\n      event.features = features;\n\n      if (onHover) {\n        onHover(event);\n      }\n    }\n\n    if (isEntering) {\n      onEvent.call(this, 'onMouseEnter', event);\n    }\n\n    if (isExiting) {\n      onEvent.call(this, 'onMouseLeave', event);\n    }\n\n    if (isEntering || isExiting) {\n      this.setState({\n        isHovering: isHovering\n      });\n    }\n  }\n}\n\nfunction onPointerClick(event) {\n  var _this$props2 = this.props,\n      onClick = _this$props2.onClick,\n      onNativeClick = _this$props2.onNativeClick,\n      onDblClick = _this$props2.onDblClick,\n      doubleClickZoom = _this$props2.doubleClickZoom;\n  var callbacks = [];\n  var isDoubleClickEnabled = onDblClick || doubleClickZoom;\n\n  switch (event.type) {\n    case 'anyclick':\n      callbacks.push(onNativeClick);\n\n      if (!isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n\n      break;\n\n    case 'click':\n      if (isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n\n      break;\n\n    default:\n  }\n\n  callbacks = callbacks.filter(Boolean);\n\n  if (callbacks.length) {\n    event = normalizeEvent.call(this, event);\n    event.features = getFeatures.call(this, event.point);\n    callbacks.forEach(function (cb) {\n      return cb(event);\n    });\n  }\n}\n\nfunction getRefHandles(staticMapRef) {\n  return {\n    getMap: staticMapRef.current && staticMapRef.current.getMap,\n    queryRenderedFeatures: staticMapRef.current && staticMapRef.current.queryRenderedFeatures\n  };\n}\n\nvar InteractiveMap = forwardRef(function (props, ref) {\n  var parentContext = useContext(MapContext);\n  var controller = useMemo(function () {\n    return props.controller || new MapController();\n  }, []);\n  var eventManager = useMemo(function () {\n    return new EventManager(null, {\n      touchAction: props.touchAction,\n      recognizerOptions: props.eventRecognizerOptions\n    });\n  }, []);\n  var eventCanvasRef = useRef(null);\n  var staticMapRef = useRef(null);\n\n  var _thisRef = useRef({\n    width: 0,\n    height: 0,\n    state: {\n      isHovering: false,\n      isDragging: false\n    }\n  });\n\n  var thisRef = _thisRef.current;\n  thisRef.props = props;\n  thisRef.map = staticMapRef.current && staticMapRef.current.getMap();\n\n  thisRef.setState = function (newState) {\n    thisRef.state = _objectSpread(_objectSpread({}, thisRef.state), newState);\n    eventCanvasRef.current.style.cursor = props.getCursor(thisRef.state);\n  };\n\n  var inRender = true;\n  var viewportUpdateRequested;\n  var stateUpdateRequested;\n\n  var handleViewportChange = function handleViewportChange(viewState, interactionState, oldViewState) {\n    if (inRender) {\n      viewportUpdateRequested = [viewState, interactionState, oldViewState];\n      return;\n    }\n\n    var _thisRef$props = thisRef.props,\n        onViewStateChange = _thisRef$props.onViewStateChange,\n        onViewportChange = _thisRef$props.onViewportChange;\n    Object.defineProperty(viewState, 'position', {\n      get: function get() {\n        return [0, 0, getTerrainElevation(thisRef.map, viewState)];\n      }\n    });\n\n    if (onViewStateChange) {\n      onViewStateChange({\n        viewState: viewState,\n        interactionState: interactionState,\n        oldViewState: oldViewState\n      });\n    }\n\n    if (onViewportChange) {\n      onViewportChange(viewState, interactionState, oldViewState);\n    }\n  };\n\n  useImperativeHandle(ref, function () {\n    return getRefHandles(staticMapRef);\n  }, []);\n  var context = useMemo(function () {\n    return _objectSpread(_objectSpread({}, parentContext), {}, {\n      eventManager: eventManager,\n      container: parentContext.container || eventCanvasRef.current\n    });\n  }, [parentContext, eventCanvasRef.current]);\n  context.onViewportChange = handleViewportChange;\n  context.viewport = parentContext.viewport || getViewport(thisRef);\n  thisRef.viewport = context.viewport;\n\n  var handleInteractionStateChange = function handleInteractionStateChange(interactionState) {\n    var _interactionState$isD = interactionState.isDragging,\n        isDragging = _interactionState$isD === void 0 ? false : _interactionState$isD;\n\n    if (isDragging !== thisRef.state.isDragging) {\n      thisRef.setState({\n        isDragging: isDragging\n      });\n    }\n\n    if (inRender) {\n      stateUpdateRequested = interactionState;\n      return;\n    }\n\n    var onInteractionStateChange = thisRef.props.onInteractionStateChange;\n\n    if (onInteractionStateChange) {\n      onInteractionStateChange(interactionState);\n    }\n  };\n\n  var updateControllerOpts = function updateControllerOpts() {\n    if (thisRef.width && thisRef.height) {\n      controller.setOptions(_objectSpread(_objectSpread(_objectSpread({}, thisRef.props), thisRef.props.viewState), {}, {\n        isInteractive: Boolean(thisRef.props.onViewStateChange || thisRef.props.onViewportChange),\n        onViewportChange: handleViewportChange,\n        onStateChange: handleInteractionStateChange,\n        eventManager: eventManager,\n        width: thisRef.width,\n        height: thisRef.height\n      }));\n    }\n  };\n\n  var onResize = function onResize(_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    thisRef.width = width;\n    thisRef.height = height;\n    updateControllerOpts();\n    thisRef.props.onResize({\n      width: width,\n      height: height\n    });\n  };\n\n  useEffect(function () {\n    eventManager.setElement(eventCanvasRef.current);\n    eventManager.on({\n      pointerdown: onPointerDown.bind(thisRef),\n      pointermove: onPointerMove.bind(thisRef),\n      pointerup: onPointerUp.bind(thisRef),\n      pointerleave: onEvent.bind(thisRef, 'onMouseOut'),\n      click: onPointerClick.bind(thisRef),\n      anyclick: onPointerClick.bind(thisRef),\n      dblclick: onEvent.bind(thisRef, 'onDblClick'),\n      wheel: onEvent.bind(thisRef, 'onWheel'),\n      contextmenu: onEvent.bind(thisRef, 'onContextMenu')\n    });\n    return function () {\n      eventManager.destroy();\n    };\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    if (viewportUpdateRequested) {\n      handleViewportChange.apply(void 0, _toConsumableArray(viewportUpdateRequested));\n    }\n\n    if (stateUpdateRequested) {\n      handleInteractionStateChange(stateUpdateRequested);\n    }\n  });\n  updateControllerOpts();\n  var width = props.width,\n      height = props.height,\n      style = props.style,\n      getCursor = props.getCursor;\n  var eventCanvasStyle = useMemo(function () {\n    return _objectSpread(_objectSpread({\n      position: 'relative'\n    }, style), {}, {\n      width: width,\n      height: height,\n      cursor: getCursor(thisRef.state)\n    });\n  }, [style, width, height, getCursor, thisRef.state]);\n\n  if (!viewportUpdateRequested || !thisRef._child) {\n    thisRef._child = React.createElement(MapContextProvider, {\n      value: context\n    }, React.createElement(\"div\", {\n      key: \"event-canvas\",\n      ref: eventCanvasRef,\n      style: eventCanvasStyle\n    }, React.createElement(StaticMap, _extends({}, props, {\n      width: \"100%\",\n      height: \"100%\",\n      style: null,\n      onResize: onResize,\n      ref: staticMapRef\n    }))));\n  }\n\n  inRender = false;\n  return thisRef._child;\n});\nInteractiveMap.supported = StaticMap.supported;\nInteractiveMap.propTypes = propTypes;\nInteractiveMap.defaultProps = defaultProps;\nexport default InteractiveMap;","map":{"version":3,"mappings":"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","names":["React","useContext","useRef","useMemo","useEffect","useImperativeHandle","forwardRef","PropTypes","StaticMap","getViewport","MAPBOX_LIMITS","TransitionManager","MapContext","MapContextProvider","EventManager","MapController","useIsomorphicLayoutEffect","getTerrainElevation","propTypes","Object","assign","maxZoom","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","onInteractionStateChange","transitionDuration","oneOfType","string","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onDblClick","onContextMenu","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onMouseEnter","onMouseLeave","onMouseOut","onWheel","touchAction","eventRecognizerOptions","clickRadius","interactiveLayerIds","array","getCursor","controller","instanceOf","getDefaultCursor","isDragging","isHovering","defaultProps","onNativeClick","event","preventDefault","normalizeEvent","lngLat","offsetCenter","x","y","Number","isFinite","pos","point","map","location","unproject","lng","lat","getFeatures","queryParams","size","props","layers","queryRenderedFeatures","onEvent","callbackName","call","onPointerDown","pointerType","onPointerUp","onPointerMove","state","features","Boolean","length","isEntering","isExiting","setState","onPointerClick","callbacks","isDoubleClickEnabled","type","push","filter","forEach","cb","getRefHandles","staticMapRef","getMap","current","InteractiveMap","ref","parentContext","eventManager","recognizerOptions","eventCanvasRef","_thisRef","width","height","thisRef","newState","style","cursor","inRender","viewportUpdateRequested","stateUpdateRequested","handleViewportChange","viewState","interactionState","oldViewState","defineProperty","get","context","container","viewport","handleInteractionStateChange","updateControllerOpts","setOptions","isInteractive","onStateChange","onResize","setElement","on","pointerdown","bind","pointermove","pointerup","pointerleave","click","anyclick","dblclick","wheel","contextmenu","destroy","eventCanvasStyle","position","_child","value","key","supported"],"sources":["../../../src/components/interactive-map.js"],"sourcesContent":["import * as React from 'react';\nimport {useContext, useRef, useMemo, useEffect, useImperativeHandle, forwardRef} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport StaticMap, {getViewport} from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\n\nimport TransitionManager from '../utils/transition-manager';\nimport MapContext, {MapContextProvider} from './map-context';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapController from '../utils/map-controller';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport {getTerrainElevation} from '../utils/terrain';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Drag to pan\n  dragPan: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Drag to rotate\n  dragRotate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Multitouch rotate\n  touchRotate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  // Keyboard\n  keyboard: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n\n  /** Event callbacks */\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onWheel: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Custom hammer.js recognizer options */\n  eventRecognizerOptions: PropTypes.object,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** List of layers that are interactive */\n  interactiveLayerIds: PropTypes.array,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controller\n  // The object must expose a method: `setOptions(opts)`\n  controller: PropTypes.instanceOf(MapController)\n});\n\nconst getDefaultCursor = ({isDragging, isHovering}) =>\n  isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n\nconst defaultProps = Object.assign(\n  {},\n  StaticMap.defaultProps,\n  MAPBOX_LIMITS,\n  TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onNativeClick: null,\n    onHover: null,\n    onContextMenu: event => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n    touchZoom: true,\n    touchRotate: false,\n    keyboard: true,\n\n    touchAction: 'none',\n    eventRecognizerOptions: {},\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\n/* Event handlers */\nfunction normalizeEvent(event) {\n  if (event.lngLat || !event.offsetCenter) {\n    return event;\n  }\n\n  const {\n    offsetCenter: {x, y}\n  } = event;\n  // https://github.com/visgl/react-map-gl/issues/1449\n  // TODO - fix in mjolnir.js\n  if (!Number.isFinite(x) || !Number.isFinite(y)) {\n    return event;\n  }\n  const pos = [x, y];\n\n  event.point = pos;\n\n  if (this.map) {\n    const location = this.map.unproject(pos);\n    event.lngLat = [location.lng, location.lat];\n  }\n\n  return event;\n}\n\nfunction getFeatures(pos) {\n  const {map} = this;\n\n  if (!map || !pos) {\n    return null;\n  }\n\n  const queryParams = {};\n  const size = this.props.clickRadius;\n\n  if (this.props.interactiveLayerIds) {\n    queryParams.layers = this.props.interactiveLayerIds;\n  }\n\n  try {\n    // This may fail if map is still loading\n    return map.queryRenderedFeatures(\n      size\n        ? // Radius enables point features, like marker symbols, to be clicked.\n          [\n            [pos[0] - size, pos[1] + size],\n            [pos[0] + size, pos[1] - size]\n          ]\n        : pos,\n      queryParams\n    );\n  } catch {\n    return null;\n  }\n}\n\nfunction onEvent(callbackName, event) {\n  const func = this.props[callbackName];\n  if (func) {\n    func(normalizeEvent.call(this, event));\n  }\n}\n\nfunction onPointerDown(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchStart' : 'onMouseDown', event);\n}\n\nfunction onPointerUp(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchEnd' : 'onMouseUp', event);\n}\n\n// eslint-disable-next-line complexity\nfunction onPointerMove(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchMove' : 'onMouseMove', event);\n\n  if (!this.state.isDragging) {\n    const {onHover, interactiveLayerIds} = this.props;\n    let features;\n    event = normalizeEvent.call(this, event);\n    if (interactiveLayerIds || onHover) {\n      features = getFeatures.call(this, event.point);\n    }\n\n    const isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\n    const isEntering = isHovering && !this.state.isHovering;\n    const isExiting = !isHovering && this.state.isHovering;\n\n    if (onHover || isEntering) {\n      event.features = features;\n\n      // backward compatibility: v3 `onHover` interface\n      if (onHover) {\n        onHover(event);\n      }\n    }\n\n    if (isEntering) {\n      onEvent.call(this, 'onMouseEnter', event);\n    }\n    if (isExiting) {\n      onEvent.call(this, 'onMouseLeave', event);\n    }\n    if (isEntering || isExiting) {\n      this.setState({isHovering});\n    }\n  }\n}\n\nfunction onPointerClick(event) {\n  const {onClick, onNativeClick, onDblClick, doubleClickZoom} = this.props;\n  let callbacks = [];\n  const isDoubleClickEnabled = onDblClick || doubleClickZoom;\n\n  // `click` is only fired on single click. `anyclick` is fired twice if double clicking.\n  // `click` has a delay period after pointer up that prevents it from firing when\n  // double clicking. `anyclick` is always fired immediately after pointer up.\n  // If double click is turned off by the user, we want to immediately fire the\n  // onClick event. Otherwise, we wait to make sure it's a single click.\n  switch (event.type) {\n    case 'anyclick':\n      callbacks.push(onNativeClick);\n      if (!isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n      break;\n\n    case 'click':\n      if (isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n      break;\n\n    default:\n  }\n\n  callbacks = callbacks.filter(Boolean);\n\n  if (callbacks.length) {\n    event = normalizeEvent.call(this, event);\n    // backward compatibility: v3 `onClick` interface\n    event.features = getFeatures.call(this, event.point);\n    callbacks.forEach(cb => cb(event));\n  }\n}\n/* End of event handers */\n\nfunction getRefHandles(staticMapRef) {\n  return {\n    getMap: staticMapRef.current && staticMapRef.current.getMap,\n    queryRenderedFeatures: staticMapRef.current && staticMapRef.current.queryRenderedFeatures\n  };\n}\n\n/* eslint-disable max-statements */\nconst InteractiveMap = forwardRef((props, ref) => {\n  const parentContext = useContext(MapContext);\n  const controller = useMemo(() => props.controller || new MapController(), []);\n  const eventManager = useMemo(\n    () =>\n      new EventManager(null, {\n        touchAction: props.touchAction,\n        recognizerOptions: props.eventRecognizerOptions\n      }),\n    []\n  );\n  const eventCanvasRef = useRef(null);\n  const staticMapRef = useRef(null);\n\n  // Event handlers are registered once but need access to the latest props\n  // This is an anti-pattern, though it maintains a persistent reference to the latest props/state of this component\n  const _thisRef = useRef({\n    width: 0,\n    height: 0,\n    state: {\n      isHovering: false,\n      isDragging: false\n    }\n  });\n  const thisRef = _thisRef.current;\n  thisRef.props = props;\n  thisRef.map = staticMapRef.current && staticMapRef.current.getMap();\n  thisRef.setState = newState => {\n    thisRef.state = {...thisRef.state, ...newState};\n    eventCanvasRef.current.style.cursor = props.getCursor(thisRef.state);\n  };\n\n  let inRender = true;\n  let viewportUpdateRequested;\n  let stateUpdateRequested;\n\n  const handleViewportChange = (viewState, interactionState, oldViewState) => {\n    if (inRender) {\n      // Do not call the callbacks during render - may result in \"cannot update during an existing state transition\" error.\n      // Defer the update until after render\n      viewportUpdateRequested = [viewState, interactionState, oldViewState];\n      return;\n    }\n    const {onViewStateChange, onViewportChange} = thisRef.props;\n\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(viewState, 'position', {\n      get: () => [0, 0, getTerrainElevation(thisRef.map, viewState)]\n    });\n\n    if (onViewStateChange) {\n      onViewStateChange({viewState, interactionState, oldViewState});\n    }\n    if (onViewportChange) {\n      onViewportChange(viewState, interactionState, oldViewState);\n    }\n  };\n\n  useImperativeHandle(ref, () => getRefHandles(staticMapRef), []);\n\n  const context = useMemo(\n    () => ({\n      ...parentContext,\n      eventManager,\n      container: parentContext.container || eventCanvasRef.current\n    }),\n    [parentContext, eventCanvasRef.current]\n  );\n  context.onViewportChange = handleViewportChange;\n  context.viewport = parentContext.viewport || getViewport(thisRef);\n  thisRef.viewport = context.viewport;\n\n  const handleInteractionStateChange = interactionState => {\n    const {isDragging = false} = interactionState;\n    if (isDragging !== thisRef.state.isDragging) {\n      thisRef.setState({isDragging});\n    }\n\n    if (inRender) {\n      // Do not call the callbacks during render - may result in \"cannot update during an existing state transition\" error.\n      // Defer the update until after render\n      stateUpdateRequested = interactionState;\n      return;\n    }\n\n    const {onInteractionStateChange} = thisRef.props;\n    if (onInteractionStateChange) {\n      onInteractionStateChange(interactionState);\n    }\n  };\n\n  const updateControllerOpts = () => {\n    if (thisRef.width && thisRef.height) {\n      controller.setOptions({\n        ...thisRef.props,\n        ...thisRef.props.viewState,\n        isInteractive: Boolean(thisRef.props.onViewStateChange || thisRef.props.onViewportChange),\n        onViewportChange: handleViewportChange,\n        onStateChange: handleInteractionStateChange,\n        eventManager,\n        width: thisRef.width,\n        height: thisRef.height\n      });\n    }\n  };\n\n  const onResize = ({width, height}) => {\n    thisRef.width = width;\n    thisRef.height = height;\n    updateControllerOpts();\n    thisRef.props.onResize({width, height});\n  };\n\n  useEffect(() => {\n    eventManager.setElement(eventCanvasRef.current);\n    // Register event handlers\n    eventManager.on({\n      pointerdown: onPointerDown.bind(thisRef),\n      pointermove: onPointerMove.bind(thisRef),\n      pointerup: onPointerUp.bind(thisRef),\n      pointerleave: onEvent.bind(thisRef, 'onMouseOut'),\n      click: onPointerClick.bind(thisRef),\n      anyclick: onPointerClick.bind(thisRef),\n      dblclick: onEvent.bind(thisRef, 'onDblClick'),\n      wheel: onEvent.bind(thisRef, 'onWheel'),\n      contextmenu: onEvent.bind(thisRef, 'onContextMenu')\n    });\n\n    // Clean up on unmount\n    return () => {\n      eventManager.destroy();\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (viewportUpdateRequested) {\n      // Perform deferred updates\n      handleViewportChange(...viewportUpdateRequested);\n    }\n    if (stateUpdateRequested) {\n      handleInteractionStateChange(stateUpdateRequested);\n    }\n  });\n\n  updateControllerOpts();\n\n  const {width, height, style, getCursor} = props;\n\n  const eventCanvasStyle = useMemo(\n    () => ({\n      position: 'relative',\n      ...style,\n      width,\n      height,\n      cursor: getCursor(thisRef.state)\n    }),\n    [style, width, height, getCursor, thisRef.state]\n  );\n\n  if (!viewportUpdateRequested || !thisRef._child) {\n    // Only rerender if no viewport update has been requested during render.\n    // Otherwise return the last rendered child, and invoke the callback when we're done.\n    thisRef._child = (\n      <MapContextProvider value={context}>\n        <div key=\"event-canvas\" ref={eventCanvasRef} style={eventCanvasStyle}>\n          <StaticMap\n            {...props}\n            width=\"100%\"\n            height=\"100%\"\n            style={null}\n            onResize={onResize}\n            ref={staticMapRef}\n          />\n        </div>\n      </MapContextProvider>\n    );\n  }\n\n  inRender = false;\n  return thisRef._child;\n});\n\nInteractiveMap.supported = StaticMap.supported;\nInteractiveMap.propTypes = propTypes;\nInteractiveMap.defaultProps = defaultProps;\n\nexport default InteractiveMap;\n"]},"metadata":{},"sourceType":"module"}