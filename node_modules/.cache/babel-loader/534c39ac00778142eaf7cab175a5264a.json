{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapState from '../utils/map-state';\nimport { LINEAR_TRANSITION_PROPS } from '../utils/map-controller';\nimport { compareVersions } from '../utils/version';\nimport useMapControl, { mapControlDefaultProps, mapControlPropTypes } from './use-map-control';\n\nvar noop = function noop() {};\n\nvar propTypes = Object.assign({}, mapControlPropTypes, {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  showCompass: PropTypes.bool,\n  showZoom: PropTypes.bool,\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  compassLabel: PropTypes.string\n});\nvar defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  compassLabel: 'Reset North'\n});\nvar VERSION_LEGACY = 1;\nvar VERSION_1_6 = 2;\n\nfunction getUIVersion(mapboxVersion) {\n  return compareVersions(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\n}\n\nfunction updateViewport(context, props, opts) {\n  var viewport = context.viewport;\n  var mapState = new MapState(Object.assign({}, viewport, opts));\n  var viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n  var onViewportChange = props.onViewportChange || context.onViewportChange || noop;\n  var onViewStateChange = props.onViewStateChange || context.onViewStateChange || noop;\n  onViewStateChange({\n    viewState: viewState\n  });\n  onViewportChange(viewState);\n}\n\nfunction renderButton(type, label, callback, children) {\n  return React.createElement(\"button\", {\n    key: type,\n    className: \"mapboxgl-ctrl-icon mapboxgl-ctrl-\".concat(type),\n    type: \"button\",\n    title: label,\n    onClick: callback\n  }, children || React.createElement(\"span\", {\n    className: \"mapboxgl-ctrl-icon\",\n    \"aria-hidden\": \"true\"\n  }));\n}\n\nfunction renderCompass(context) {\n  var uiVersion = useMemo(function () {\n    return context.map ? getUIVersion(context.map.version) : VERSION_1_6;\n  }, [context.map]);\n  var bearing = context.viewport.bearing;\n  var style = {\n    transform: \"rotate(\".concat(-bearing, \"deg)\")\n  };\n  return uiVersion === VERSION_1_6 ? React.createElement(\"span\", {\n    className: \"mapboxgl-ctrl-icon\",\n    \"aria-hidden\": \"true\",\n    style: style\n  }) : React.createElement(\"span\", {\n    className: \"mapboxgl-ctrl-compass-arrow\",\n    style: style\n  });\n}\n\nfunction NavigationControl(props) {\n  var _useMapControl = useMapControl(props),\n      context = _useMapControl.context,\n      containerRef = _useMapControl.containerRef;\n\n  var onZoomIn = function onZoomIn() {\n    updateViewport(context, props, {\n      zoom: context.viewport.zoom + 1\n    });\n  };\n\n  var onZoomOut = function onZoomOut() {\n    updateViewport(context, props, {\n      zoom: context.viewport.zoom - 1\n    });\n  };\n\n  var onResetNorth = function onResetNorth() {\n    updateViewport(context, props, {\n      bearing: 0,\n      pitch: 0\n    });\n  };\n\n  var className = props.className,\n      showCompass = props.showCompass,\n      showZoom = props.showZoom,\n      zoomInLabel = props.zoomInLabel,\n      zoomOutLabel = props.zoomOutLabel,\n      compassLabel = props.compassLabel;\n  var style = useMemo(function () {\n    return _objectSpread({\n      position: 'absolute'\n    }, props.style);\n  }, [props.style]);\n  return React.createElement(\"div\", {\n    style: style,\n    className: className\n  }, React.createElement(\"div\", {\n    className: \"mapboxgl-ctrl mapboxgl-ctrl-group\",\n    ref: containerRef\n  }, showZoom && renderButton('zoom-in', zoomInLabel, onZoomIn), showZoom && renderButton('zoom-out', zoomOutLabel, onZoomOut), showCompass && renderButton('compass', compassLabel, onResetNorth, renderCompass(context))));\n}\n\nNavigationControl.propTypes = propTypes;\nNavigationControl.defaultProps = defaultProps;\nexport default React.memo(NavigationControl);","map":{"version":3,"mappings":"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","names":["React","useMemo","PropTypes","MapState","LINEAR_TRANSITION_PROPS","compareVersions","useMapControl","mapControlDefaultProps","mapControlPropTypes","noop","propTypes","Object","assign","className","string","style","object","onViewStateChange","func","onViewportChange","showCompass","bool","showZoom","zoomInLabel","zoomOutLabel","compassLabel","defaultProps","VERSION_LEGACY","VERSION_1_6","getUIVersion","mapboxVersion","updateViewport","context","props","opts","viewport","mapState","viewState","getViewportProps","renderButton","type","label","callback","children","key","title","onClick","renderCompass","uiVersion","map","version","bearing","transform","NavigationControl","containerRef","onZoomIn","zoom","onZoomOut","onResetNorth","pitch","position","ref","memo"],"sources":["../../../src/components/navigation-control.js"],"sourcesContent":["import * as React from 'react';\nimport {useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\n\nimport {compareVersions} from '../utils/version';\n\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool,\n  // Custom labels assigned to the controls\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  compassLabel: PropTypes.string\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  compassLabel: 'Reset North'\n});\n\n// Mapbox version flags. CSS classes were changed in certain versions.\nconst VERSION_LEGACY = 1;\nconst VERSION_1_6 = 2;\n\nfunction getUIVersion(mapboxVersion) {\n  return compareVersions(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\n}\n\nfunction updateViewport(context, props, opts) {\n  const {viewport} = context;\n  const mapState = new MapState(Object.assign({}, viewport, opts));\n  const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n  const onViewportChange = props.onViewportChange || context.onViewportChange || noop;\n  const onViewStateChange = props.onViewStateChange || context.onViewStateChange || noop;\n\n  // Call new style callback\n  onViewStateChange({viewState});\n\n  // Call old style callback\n  onViewportChange(viewState);\n}\n\nfunction renderButton(type, label, callback, children) {\n  return (\n    <button\n      key={type}\n      className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n      type=\"button\"\n      title={label}\n      onClick={callback}\n    >\n      {children || <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />}\n    </button>\n  );\n}\n\nfunction renderCompass(context) {\n  const uiVersion = useMemo(() => (context.map ? getUIVersion(context.map.version) : VERSION_1_6), [\n    context.map\n  ]);\n\n  const {bearing} = context.viewport;\n  const style = {transform: `rotate(${-bearing}deg)`};\n\n  return uiVersion === VERSION_1_6 ? (\n    <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" style={style} />\n  ) : (\n    <span className=\"mapboxgl-ctrl-compass-arrow\" style={style} />\n  );\n}\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nfunction NavigationControl(props) {\n  const {context, containerRef} = useMapControl(props);\n\n  const onZoomIn = () => {\n    updateViewport(context, props, {zoom: context.viewport.zoom + 1});\n  };\n\n  const onZoomOut = () => {\n    updateViewport(context, props, {zoom: context.viewport.zoom - 1});\n  };\n\n  const onResetNorth = () => {\n    updateViewport(context, props, {bearing: 0, pitch: 0});\n  };\n\n  const {className, showCompass, showZoom, zoomInLabel, zoomOutLabel, compassLabel} = props;\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={className}>\n      <div className=\"mapboxgl-ctrl mapboxgl-ctrl-group\" ref={containerRef}>\n        {showZoom && renderButton('zoom-in', zoomInLabel, onZoomIn)}\n        {showZoom && renderButton('zoom-out', zoomOutLabel, onZoomOut)}\n        {showCompass && renderButton('compass', compassLabel, onResetNorth, renderCompass(context))}\n      </div>\n    </div>\n  );\n}\n\nNavigationControl.propTypes = propTypes;\nNavigationControl.defaultProps = defaultProps;\n\nexport default React.memo(NavigationControl);\n"]},"metadata":{},"sourceType":"module"}