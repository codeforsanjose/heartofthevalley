{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function () {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function (condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","map":{"version":3,"names":["__DEV__","process","env","NODE_ENV","warning","printWarning","format","args","len","arguments","length","Array","key","argIndex","message","replace","console","error","Error","x","condition","undefined","apply","concat","module","exports"],"sources":["/Users/lavanyagurajada/HOV/heartofthevalley/app/client/node_modules/warning/warning.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;;AAEA,IAAIC,OAAO,GAAG,YAAW,CAAE,CAA3B;;AAEA,IAAIJ,OAAJ,EAAa;EACX,IAAIK,YAAY,GAAG,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;IACrD,IAAIC,GAAG,GAAGC,SAAS,CAACC,MAApB;IACAH,IAAI,GAAG,IAAII,KAAJ,CAAUH,GAAG,GAAG,CAAN,GAAUA,GAAG,GAAG,CAAhB,GAAoB,CAA9B,CAAP;;IACA,KAAK,IAAII,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,GAAxB,EAA6BI,GAAG,EAAhC,EAAoC;MAClCL,IAAI,CAACK,GAAG,GAAG,CAAP,CAAJ,GAAgBH,SAAS,CAACG,GAAD,CAAzB;IACD;;IACD,IAAIC,QAAQ,GAAG,CAAf;IACA,IAAIC,OAAO,GAAG,cACZR,MAAM,CAACS,OAAP,CAAe,KAAf,EAAsB,YAAW;MAC/B,OAAOR,IAAI,CAACM,QAAQ,EAAT,CAAX;IACD,CAFD,CADF;;IAIA,IAAI,OAAOG,OAAP,KAAmB,WAAvB,EAAoC;MAClCA,OAAO,CAACC,KAAR,CAAcH,OAAd;IACD;;IACD,IAAI;MACF;MACA;MACA;MACA,MAAM,IAAII,KAAJ,CAAUJ,OAAV,CAAN;IACD,CALD,CAKE,OAAOK,CAAP,EAAU,CAAE;EACf,CApBD;;EAsBAf,OAAO,GAAG,UAASgB,SAAT,EAAoBd,MAApB,EAA4BC,IAA5B,EAAkC;IAC1C,IAAIC,GAAG,GAAGC,SAAS,CAACC,MAApB;IACAH,IAAI,GAAG,IAAII,KAAJ,CAAUH,GAAG,GAAG,CAAN,GAAUA,GAAG,GAAG,CAAhB,GAAoB,CAA9B,CAAP;;IACA,KAAK,IAAII,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,GAAxB,EAA6BI,GAAG,EAAhC,EAAoC;MAClCL,IAAI,CAACK,GAAG,GAAG,CAAP,CAAJ,GAAgBH,SAAS,CAACG,GAAD,CAAzB;IACD;;IACD,IAAIN,MAAM,KAAKe,SAAf,EAA0B;MACxB,MAAM,IAAIH,KAAJ,CACF,8DACA,kBAFE,CAAN;IAID;;IACD,IAAI,CAACE,SAAL,EAAgB;MACdf,YAAY,CAACiB,KAAb,CAAmB,IAAnB,EAAyB,CAAChB,MAAD,EAASiB,MAAT,CAAgBhB,IAAhB,CAAzB;IACD;EACF,CAfD;AAgBD;;AAEDiB,MAAM,CAACC,OAAP,GAAiBrB,OAAjB"},"metadata":{},"sourceType":"script"}